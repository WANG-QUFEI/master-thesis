# Makefile generated by BNFC.

GHC        = ghc
HAPPY      = happy
HAPPY_OPTS = --array --info --ghc --coerce
ALEX       = alex
ALEX_OPTS  = --ghc

# List of goals not corresponding to file names.

.PHONY : all clean distclean

# Default goal.

all : Core/Test

# Rules for building the parser.

Core/Abs.hs Core/Layout.hs Core/Lex.x Core/Par.y Core/Print.hs Core/Test.hs : Core.cf
	bnfc --haskell -d Core.cf

%.hs : %.y
	${HAPPY} ${HAPPY_OPTS} $<

%.hs : %.x
	${ALEX} ${ALEX_OPTS} $<

Core/Test : Core/Abs.hs Core/Layout.hs Core/Lex.hs Core/Par.hs Core/Print.hs Core/Test.hs
	${GHC} ${GHC_OPTS} $@

# Rules for cleaning generated files.

clean :
	-rm -f Core/*.hi Core/*.o Core/*.log Core/*.aux Core/*.dvi

distclean : clean
	-rm -f Core/Abs.hs Core/Abs.hs.bak Core/ComposOp.hs Core/ComposOp.hs.bak Core/Doc.txt Core/Doc.txt.bak Core/ErrM.hs Core/ErrM.hs.bak Core/Layout.hs Core/Layout.hs.bak Core/Lex.x Core/Lex.x.bak Core/Par.y Core/Par.y.bak Core/Print.hs Core/Print.hs.bak Core/Skel.hs Core/Skel.hs.bak Core/Test.hs Core/Test.hs.bak Core/XML.hs Core/XML.hs.bak Core/AST.agda Core/AST.agda.bak Core/Parser.agda Core/Parser.agda.bak Core/IOLib.agda Core/IOLib.agda.bak Core/Main.agda Core/Main.agda.bak Core/Core.dtd Core/Core.dtd.bak Core/Test Core/Lex.hs Core/Par.hs Core/Par.info Core/ParData.hs Makefile
	-rmdir -p Core/

# EOF
