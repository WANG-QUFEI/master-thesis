-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Core/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pContext -> Context                         (0)
	%start_pCExp -> CExp                               (1)
	%start_pCDecl -> CDecl                             (2)
	Id -> L_Id                                         (3)
	Context -> ListCDecl                               (4)
	CExp2 -> '*'                                       (5)
	CExp2 -> Id                                        (6)
	CExp2 -> CExp3                                     (7)
	CExp1 -> CExp1 CExp2                               (8)
	CExp1 -> CExp2                                     (9)
	CExp -> CExp1 '->' CExp                            (10)
	CExp -> '[' Id ':' CExp ']' CExp                   (11)
	CExp -> '[' Id ':' CExp '=' CExp ']' CExp          (12)
	CExp -> CExp1                                      (13)
	CDecl -> Id ':' CExp                               (14)
	CDecl -> Id ':' CExp '=' CExp                      (15)
	ListCDecl ->                                       (16)
	ListCDecl -> CDecl ';' ListCDecl                   (17)
	CExp3 -> '(' CExp ')'                              (18)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	'*'            { PT _ (TS _ 3) }
	'->'           { PT _ (TS _ 4) }
	':'            { PT _ (TS _ 5) }
	';'            { PT _ (TS _ 6) }
	'='            { PT _ (TS _ 7) }
	'['            { PT _ (TS _ 8) }
	']'            { PT _ (TS _ 9) }
	L_Id           { PT _ (T_Id _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pContext rule  0
	%start_pCExp    rule  1
	%start_pCDecl   rule  2
	Id              rule  3
	Context         rule  4
	CExp2           rules 5, 6, 7
	CExp1           rules 8, 9
	CExp            rules 10, 11, 12, 13
	CDecl           rules 14, 15
	ListCDecl       rules 16, 17
	CExp3           rule  18

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pContext -> . Context                        (rule 0)

	L_Id           shift, and enter state 4
	%eof           reduce using rule 16

	Id             goto state 5
	Context        goto state 15
	CDecl          goto state 16
	ListCDecl      goto state 17

State 1

	%start_pCExp -> . CExp                              (rule 1)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'['            shift, and enter state 14
	L_Id           shift, and enter state 4

	Id             goto state 7
	CExp2          goto state 8
	CExp1          goto state 9
	CExp           goto state 10
	CExp3          goto state 11

State 2

	%start_pCDecl -> . CDecl                            (rule 2)

	L_Id           shift, and enter state 4

	Id             goto state 5
	CDecl          goto state 6

State 3

	Id -> . L_Id                                        (rule 3)

	L_Id           shift, and enter state 4


State 4

	Id -> L_Id .                                        (rule 3)

	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'->'           reduce using rule 3
	':'            reduce using rule 3
	';'            reduce using rule 3
	'='            reduce using rule 3
	']'            reduce using rule 3
	L_Id           reduce using rule 3
	%eof           reduce using rule 3


State 5

	CDecl -> Id . ':' CExp                              (rule 14)
	CDecl -> Id . ':' CExp '=' CExp                     (rule 15)

	':'            shift, and enter state 23


State 6

	%start_pCDecl -> CDecl .                            (rule 2)

	%eof           accept


State 7

	CExp2 -> Id .                                       (rule 6)

	'('            reduce using rule 6
	')'            reduce using rule 6
	'*'            reduce using rule 6
	'->'           reduce using rule 6
	';'            reduce using rule 6
	'='            reduce using rule 6
	']'            reduce using rule 6
	L_Id           reduce using rule 6
	%eof           reduce using rule 6


State 8

	CExp1 -> CExp2 .                                    (rule 9)

	'('            reduce using rule 9
	')'            reduce using rule 9
	'*'            reduce using rule 9
	'->'           reduce using rule 9
	';'            reduce using rule 9
	'='            reduce using rule 9
	']'            reduce using rule 9
	L_Id           reduce using rule 9
	%eof           reduce using rule 9


State 9

	CExp1 -> CExp1 . CExp2                              (rule 8)
	CExp -> CExp1 . '->' CExp                           (rule 10)
	CExp -> CExp1 .                                     (rule 13)

	'('            shift, and enter state 12
	')'            reduce using rule 13
	'*'            shift, and enter state 13
	'->'           shift, and enter state 22
	';'            reduce using rule 13
	'='            reduce using rule 13
	']'            reduce using rule 13
	L_Id           shift, and enter state 4
	%eof           reduce using rule 13

	Id             goto state 7
	CExp2          goto state 21
	CExp3          goto state 11

State 10

	%start_pCExp -> CExp .                              (rule 1)

	%eof           accept


State 11

	CExp2 -> CExp3 .                                    (rule 7)

	'('            reduce using rule 7
	')'            reduce using rule 7
	'*'            reduce using rule 7
	'->'           reduce using rule 7
	';'            reduce using rule 7
	'='            reduce using rule 7
	']'            reduce using rule 7
	L_Id           reduce using rule 7
	%eof           reduce using rule 7


State 12

	CExp3 -> '(' . CExp ')'                             (rule 18)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'['            shift, and enter state 14
	L_Id           shift, and enter state 4

	Id             goto state 7
	CExp2          goto state 8
	CExp1          goto state 9
	CExp           goto state 20
	CExp3          goto state 11

State 13

	CExp2 -> '*' .                                      (rule 5)

	'('            reduce using rule 5
	')'            reduce using rule 5
	'*'            reduce using rule 5
	'->'           reduce using rule 5
	';'            reduce using rule 5
	'='            reduce using rule 5
	']'            reduce using rule 5
	L_Id           reduce using rule 5
	%eof           reduce using rule 5


State 14

	CExp -> '[' . Id ':' CExp ']' CExp                  (rule 11)
	CExp -> '[' . Id ':' CExp '=' CExp ']' CExp         (rule 12)

	L_Id           shift, and enter state 4

	Id             goto state 19

State 15

	%start_pContext -> Context .                        (rule 0)

	%eof           accept


State 16

	ListCDecl -> CDecl . ';' ListCDecl                  (rule 17)

	';'            shift, and enter state 18


State 17

	Context -> ListCDecl .                              (rule 4)

	%eof           reduce using rule 4


State 18

	ListCDecl -> CDecl ';' . ListCDecl                  (rule 17)

	L_Id           shift, and enter state 4
	%eof           reduce using rule 16

	Id             goto state 5
	CDecl          goto state 16
	ListCDecl      goto state 28

State 19

	CExp -> '[' Id . ':' CExp ']' CExp                  (rule 11)
	CExp -> '[' Id . ':' CExp '=' CExp ']' CExp         (rule 12)

	':'            shift, and enter state 27


State 20

	CExp3 -> '(' CExp . ')'                             (rule 18)

	')'            shift, and enter state 26


State 21

	CExp1 -> CExp1 CExp2 .                              (rule 8)

	'('            reduce using rule 8
	')'            reduce using rule 8
	'*'            reduce using rule 8
	'->'           reduce using rule 8
	';'            reduce using rule 8
	'='            reduce using rule 8
	']'            reduce using rule 8
	L_Id           reduce using rule 8
	%eof           reduce using rule 8


State 22

	CExp -> CExp1 '->' . CExp                           (rule 10)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'['            shift, and enter state 14
	L_Id           shift, and enter state 4

	Id             goto state 7
	CExp2          goto state 8
	CExp1          goto state 9
	CExp           goto state 25
	CExp3          goto state 11

State 23

	CDecl -> Id ':' . CExp                              (rule 14)
	CDecl -> Id ':' . CExp '=' CExp                     (rule 15)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'['            shift, and enter state 14
	L_Id           shift, and enter state 4

	Id             goto state 7
	CExp2          goto state 8
	CExp1          goto state 9
	CExp           goto state 24
	CExp3          goto state 11

State 24

	CDecl -> Id ':' CExp .                              (rule 14)
	CDecl -> Id ':' CExp . '=' CExp                     (rule 15)

	';'            reduce using rule 14
	'='            shift, and enter state 30
	%eof           reduce using rule 14


State 25

	CExp -> CExp1 '->' CExp .                           (rule 10)

	')'            reduce using rule 10
	';'            reduce using rule 10
	'='            reduce using rule 10
	']'            reduce using rule 10
	%eof           reduce using rule 10


State 26

	CExp3 -> '(' CExp ')' .                             (rule 18)

	'('            reduce using rule 18
	')'            reduce using rule 18
	'*'            reduce using rule 18
	'->'           reduce using rule 18
	';'            reduce using rule 18
	'='            reduce using rule 18
	']'            reduce using rule 18
	L_Id           reduce using rule 18
	%eof           reduce using rule 18


State 27

	CExp -> '[' Id ':' . CExp ']' CExp                  (rule 11)
	CExp -> '[' Id ':' . CExp '=' CExp ']' CExp         (rule 12)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'['            shift, and enter state 14
	L_Id           shift, and enter state 4

	Id             goto state 7
	CExp2          goto state 8
	CExp1          goto state 9
	CExp           goto state 29
	CExp3          goto state 11

State 28

	ListCDecl -> CDecl ';' ListCDecl .                  (rule 17)

	%eof           reduce using rule 17


State 29

	CExp -> '[' Id ':' CExp . ']' CExp                  (rule 11)
	CExp -> '[' Id ':' CExp . '=' CExp ']' CExp         (rule 12)

	'='            shift, and enter state 32
	']'            shift, and enter state 33


State 30

	CDecl -> Id ':' CExp '=' . CExp                     (rule 15)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'['            shift, and enter state 14
	L_Id           shift, and enter state 4

	Id             goto state 7
	CExp2          goto state 8
	CExp1          goto state 9
	CExp           goto state 31
	CExp3          goto state 11

State 31

	CDecl -> Id ':' CExp '=' CExp .                     (rule 15)

	';'            reduce using rule 15
	%eof           reduce using rule 15


State 32

	CExp -> '[' Id ':' CExp '=' . CExp ']' CExp         (rule 12)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'['            shift, and enter state 14
	L_Id           shift, and enter state 4

	Id             goto state 7
	CExp2          goto state 8
	CExp1          goto state 9
	CExp           goto state 35
	CExp3          goto state 11

State 33

	CExp -> '[' Id ':' CExp ']' . CExp                  (rule 11)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'['            shift, and enter state 14
	L_Id           shift, and enter state 4

	Id             goto state 7
	CExp2          goto state 8
	CExp1          goto state 9
	CExp           goto state 34
	CExp3          goto state 11

State 34

	CExp -> '[' Id ':' CExp ']' CExp .                  (rule 11)

	')'            reduce using rule 11
	';'            reduce using rule 11
	'='            reduce using rule 11
	']'            reduce using rule 11
	%eof           reduce using rule 11


State 35

	CExp -> '[' Id ':' CExp '=' CExp . ']' CExp         (rule 12)

	']'            shift, and enter state 36


State 36

	CExp -> '[' Id ':' CExp '=' CExp ']' . CExp         (rule 12)

	'('            shift, and enter state 12
	'*'            shift, and enter state 13
	'['            shift, and enter state 14
	L_Id           shift, and enter state 4

	Id             goto state 7
	CExp2          goto state 8
	CExp1          goto state 9
	CExp           goto state 37
	CExp3          goto state 11

State 37

	CExp -> '[' Id ':' CExp '=' CExp ']' CExp .         (rule 12)

	')'            reduce using rule 12
	';'            reduce using rule 12
	'='            reduce using rule 12
	']'            reduce using rule 12
	%eof           reduce using rule 12


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 19
Number of terminals: 10
Number of non-terminals: 11
Number of states: 38
